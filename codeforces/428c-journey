#include <iostream>
#include<bits/stdc++.h>
#define pb push_back
using namespace std;

vector<int>vec[100005];
bool visit[100005];
double sum=0.0;
 void dfs(int root, double prob,double dist,int prt)
 {
 
 	visit[root]=true;
 	int n=vec[root].size();
 
 	if(n==1)
 	{
 
 		sum+=(prob*dist);
 
 	}
 	else
 	{
 
 		for(int i=0;i<n;i++)
 		{
 
 			if(!visit[vec[root][i]])
 			{
 
 				dfs(vec[root][i],prob/double(n-1),dist+1,root);	
 
 			}
 
 
 		}
 
 
 	}
 
 	return ;

 }

 int main()
 {
 
 	int n;
 	cin>>n;
 	vec[1].pb(1);
 	for(int i=0,u,v;i<n-1;i++)
 	{
 
 		cin>>u>>v;
 		vec[u].pb(v);
 		vec[v].pb(u);
 
 	}
 	memset(visit,false, sizeof(visit));
 	dfs(1,1,0,-1);
 	cout<<setprecision(10)<<fixed<<sum;
 
 
 
 
 }
